variables:
  DOCKER_DRIVER: overlay


stages:
  - test
  - deploy
  - create_dev_artifacts
  - create_production_artifacts


test:
  tags:
    - develop
    - master
  image: docker:latest
  stage: test
  services:
    - name: docker:dind
  before_script:
    - docker container ls
    - docker images
  script:
    - whoami  # run tests somehow
  after_script:
    - docker container ls
    - docker images
  only:
    - dev
    - master

deploy:
  tags:
    - develop
    - master
  image: $DOCKER_USER/arete:latest
  stage: deploy
  services:
    - name: docker:dind
  before_script:
    - docker container ls
    - docker images
  script:
    - cd ~/moodle/moodle_data/moodle/mod/charon
    - git pull
  #    git clone https://charon:1sg6MQyfXDEyKckZKphs@gitlab.cs.ttu.ee/ained/charon.git
  after_script:
    - docker container ls
    - docker images
  only:
    - dev
    - master


create_dev_artifacts:
  tags:
    - develop
    - master
  stage: deploy
  script:
    - php composer.phar install
    - cp -p .env.develop .env
    - php artisan key:generate
    - npm i
    - npm run dev
    - rm -rf node_modules
    - mkdir charon
    - mv * charon || true
    - mv .* charon || true
  artifacts:
    paths:
      - $CI_PROJECT_DIR/charon

create_production_artifacts:
  tags:
    - develop
    - master
  stage: deploy
  script:
    - php composer.phar install --no-dev
    - cp -p .env.production .env
    - php artisan key:generate
    - npm i
    - npm run production
    - rm -rf node_modules
    - mkdir charon
    - mv * charon || true
    - mv .* charon || true
  artifacts:
    paths:
      - $CI_PROJECT_DIR/charon

create_production_artifacts:
  tags:
    - develop
    - master
  script:
    - php composer.phar install --no-dev
    - cp -p .env.production .env
    - php artisan key:generate
    - mkdir charon
    - mv * charon || true
    - mv .* charon || true
  artifacts:
    paths:
      - $CI_PROJECT_DIR/charon
